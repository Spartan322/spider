use :node;

var Node = module.require('../Node').Node,
    Parameter = module.require('../Parameter').Parameter;

fn ClassMethod(id, params, body, isStatic)
  extends Node {

  this.type = "ClassMethod";
  this.defaults = [];
  this.rest = null;
  this.generator = false;
  this.expression = false;
  this.kind = "method";

  this.key = id;
  this.key.parent = this;

  this.body = body;
  this.body.parent = this;

  this.params = params;

  for param in params {
    param.parent = this;
  }

  this["static"] = !(!isStatic);
}

ClassMethod.prototype.codegen = () -> {
  if !super.codegen() {
    return;
  }

  this.key.codegen();
  Parameter.generateFunctionBody(this, this.params, this.body, this.defaults);

  this.body = this.body.codegen();

  return this;
};

ClassMethod.prototype.hasCallExpression = () -> true;

exports.ClassMethod = ClassMethod;