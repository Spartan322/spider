use :node;

var Node = module.require('./Node').Node;

fn Property(key, value, shorthand, method)
  extends Node {
  
  this.type = 'ObjectMethod' if method else 'ObjectProperty';
  this.kind = 'method' if method else 'init';
  this.method = method;
  this.shorthand = shorthand;
  this.computed = false;
    
  this.key = key;
  this.key.parent = this;
  
  this.value = value;
  this.value.parent = this;
}

Property.prototype.codegen = () -> {
  if !super.codegen() {
    return;
  }
  
  this.key = this.key.codegen(false);
  this.value = this.key if this.shorthand else this.value.codegen(this.parent.type != "ObjectPattern");
  
  if this.method {
    this.params = this.value.params;
    this.body = this.value.body;
    this.id = null;
    delete this.value;
  }
  
  return this;
};

Property.prototype.hasCallExpression = () -> {
  return this.value.hasCallExpression();
};

exports.Property = Property;
